{
	"name": "NOMIS Ingestion Worker_copy1",
	"properties": {
		"activities": [
			{
				"name": "Web to lake",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set secret",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 5,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "CSV_NOMIS_API",
						"type": "DatasetReference",
						"parameters": {
							"RelativeURL": {
								"value": "@concat(\n    'dataset/',\n    pipeline().parameters.metric_id, '.data.csv?uid=', variables('NOMIS-API-key')\n)",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "CSV_Lake",
						"type": "DatasetReference",
						"parameters": {
							"container": "raw",
							"filepath": "NOMIS/Metrics",
							"filename": {
								"value": "@concat('metric_', concat(pipeline().parameters.metric_id, '.csv'))",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Lake to SQL",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Web to lake",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "CSV_Lake",
						"type": "DatasetReference",
						"parameters": {
							"container": "raw",
							"filepath": "NOMIS/Metrics",
							"filename": {
								"value": "@concat('metric_', concat(pipeline().parameters.metric_id, '.csv'))",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "SQLTable",
						"type": "DatasetReference",
						"parameters": {
							"schema": "NOMIS",
							"table_name": {
								"value": "@concat('metric_', concat(pipeline().parameters.metric_id, '_staging'))",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Lake to SQL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "NOMIS.p_standardise_datasets",
					"storedProcedureParameters": {
						"MetricID": {
							"value": {
								"value": "@pipeline().parameters.metric_id",
								"type": "Expression"
							},
							"type": "String"
						},
						"TableName": {
							"value": {
								"value": "@concat('metric_', concat(pipeline().parameters.metric_id, '_staging'))",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Analytical_Datastore",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Get secret",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": {
						"value": "@concat(\n    'https://dapalpha-kv-'\n    , replace(pipeline().DataFactory, 'dapalpha-adf-data-', ''),\n    '.vault.azure.net/secrets/NOMIS-API?api-version=7.4'\n)",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "DAPAlpha-IR",
						"type": "IntegrationRuntimeReference"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net/"
					}
				}
			},
			{
				"name": "Set secret",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get secret",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "NOMIS-API-key",
					"value": {
						"value": "@activity('Get secret').output.value",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get number of rows",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "CSV_NOMIS_API",
						"type": "DatasetReference",
						"parameters": {
							"RelativeURL": "@concat(     'dataset/',     pipeline().parameters.metric_id, '.data.csv?uid=', variables('NOMIS-API-key') )"
						}
					}
				}
			},
			{
				"name": "Set RecordCount",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get number of rows",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "RecordCount",
					"value": {
						"value": "@activity('Get number of rows').output.firstRow.RECORD_COUNT",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Until1",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Initialise RecordOffset",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"timeout": "0.12:00:00"
				}
			},
			{
				"name": "Initialise RecordOffset",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set RecordCount",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "RecordOffset",
					"value": 0
				}
			}
		],
		"parameters": {
			"metric_id": {
				"type": "string"
			}
		},
		"variables": {
			"NOMIS-API-key": {
				"type": "String"
			},
			"RecordCount": {
				"type": "Integer"
			},
			"RecordOffset": {
				"type": "Integer"
			}
		},
		"folder": {
			"name": "NOMIS"
		},
		"annotations": []
	}
}