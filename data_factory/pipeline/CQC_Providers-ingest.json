{
	"name": "CQC_Providers-ingest",
	"properties": {
		"activities": [
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"batchCount": 30,
					"activities": [
						{
							"name": "Copy data1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "upsert",
									"upsertSettings": {
										"useTempDB": true,
										"keys": [
											"providerId"
										]
									},
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "$['providerId']"
											},
											"sink": {
												"name": "providerId",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['organisationType']"
											},
											"sink": {
												"name": "organisationType",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['ownershipType']"
											},
											"sink": {
												"name": "ownershipType",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['type']"
											},
											"sink": {
												"name": "type",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['name']"
											},
											"sink": {
												"name": "name",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['brandId']"
											},
											"sink": {
												"name": "brandId",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['brandName']"
											},
											"sink": {
												"name": "brandName",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['odsCode']"
											},
											"sink": {
												"name": "odsCode",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['registrationStatus']"
											},
											"sink": {
												"name": "registrationStatus",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['registrationDate']"
											},
											"sink": {
												"name": "registrationDate",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['companiesHouseNumber']"
											},
											"sink": {
												"name": "companiesHouseNumber",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['charityNumber']"
											},
											"sink": {
												"name": "charityNumber",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['website']"
											},
											"sink": {
												"name": "website",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['postalAddressLine1']"
											},
											"sink": {
												"name": "postalAddressLine1",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['postalAddressLine2']"
											},
											"sink": {
												"name": "postalAddressLine2",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['postalAddressTownCity']"
											},
											"sink": {
												"name": "postalAddressTownCity",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['postalAddressCounty']"
											},
											"sink": {
												"name": "postalAddressCounty",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['region']"
											},
											"sink": {
												"name": "region",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['postalCode']"
											},
											"sink": {
												"name": "postalCode",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['alsoKnownAs']"
											},
											"sink": {
												"name": "alsoKnownAs",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['deregistrationDate']"
											},
											"sink": {
												"name": "deregistrationDate",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['uprn']"
											},
											"sink": {
												"name": "uprn",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['onspdLatitude']"
											},
											"sink": {
												"name": "onspdLatitude",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['onspdLongitude']"
											},
											"sink": {
												"name": "onspdLongitude",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['onspdIcbCode']"
											},
											"sink": {
												"name": "onspdIcbCode",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['onspdIcbName']"
											},
											"sink": {
												"name": "onspdIcbName",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['mainPhoneNumber']"
											},
											"sink": {
												"name": "mainPhoneNumber",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['inspectionDirectorate']"
											},
											"sink": {
												"name": "inspectionDirectorate",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['constituency']"
											},
											"sink": {
												"name": "constituency",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['localAuthority']"
											},
											"sink": {
												"name": "localAuthority",
												"type": "String"
											}
										}
									],
									"mapComplexValuesToString": false
								}
							},
							"inputs": [
								{
									"referenceName": "CQC_providers",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "SQL_CQC_PROVIDERS",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "Lookup2",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select count(*) as TotalCount from CQC.provider_list",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SQL_CQC_PROVIDER_LIST",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "TotalCount",
					"value": {
						"value": "@activity('Lookup2').output.firstRow.TotalCount",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable2",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "TotalPages",
					"value": {
						"value": "@int(div(add(variables('TotalCount'), sub(variables('BatchSize'), 1)), variables('BatchSize')))\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach2",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Set variable2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@range(1, variables('TotalPages'))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Lookup3",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT providerId FROM CQC.provider_list ORDER BY providerId OFFSET @({{PageNumber}}-1) * {{BatchSize}} ROWS FETCH NEXT {{BatchSize}} ROWS ONLY",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "SQL_CQC_PROVIDER_LIST",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						}
					]
				}
			}
		],
		"variables": {
			"TotalCount": {
				"type": "Integer"
			},
			"BatchSize": {
				"type": "Integer",
				"defaultValue": 5000
			},
			"TotalPages": {
				"type": "Integer"
			}
		},
		"folder": {
			"name": "CQC_API"
		},
		"annotations": []
	}
}